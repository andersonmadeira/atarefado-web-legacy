{"version":3,"sources":["components/Task.js","components/TaskList.js","components/Header.js","App.js","index.js"],"names":["Task","props","task","handleToggleStatus","handleTaskRemove","classes","done","react_default","a","createElement","className","onClick","label","event","stopPropagation","TaskList","tasks","map","t","src_components_Task","key","Header","state","nextTask","onInputChange","e","_this","setState","target","value","onFormSubmit","preventDefault","handleTaskAdd","this","onSubmit","type","spellCheck","onChange","placeholder","React","Component","App","filter","concat","Object","toConsumableArray","src_components_Header","src_components_TaskList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"kSAsBeA,SAnBF,SAAAC,GAAS,IACVC,EAA+CD,EAA/CC,KAAMC,EAAyCF,EAAzCE,mBAAoBC,EAAqBH,EAArBG,iBAC5BC,EAAUH,EAAKI,KAAO,UAAY,GACxC,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAWL,EAASM,QAAS,kBAAMR,EAAmBD,KACrDA,EAAKU,MACNL,EAAAC,EAAAC,cAAA,QACIC,UAAU,QACVC,QAAS,SAAAE,GACLA,EAAMC,kBACNV,EAAiBF,KAJzB,WCQGa,SAbE,SAAAd,GAAS,IACdE,EAAyCF,EAAzCE,mBAAoBC,EAAqBH,EAArBG,iBACtBY,EAAQf,EAAMe,MAAMC,IAAI,SAAAC,GAAC,OAC3BX,EAAAC,EAAAC,cAACU,EAAD,CACIC,IAAKF,EAAEN,MACPV,KAAMgB,EACNf,mBAAoBA,EACpBC,iBAAkBA,MAG1B,OAAOG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaM,KCyBvBK,oNAnCXC,MAAQ,CAAEC,SAAU,MAEpBC,cAAgB,SAAAC,GACZC,EAAKC,SAAS,CAAEJ,SAAUE,EAAEG,OAAOC,WAGvCC,aAAe,SAAAL,GACXA,EAAEM,iBACFL,EAAKzB,MAAM+B,cAAcN,EAAKJ,MAAMC,UACpCG,EAAKC,SAAS,CAAEJ,SAAU,8EAGrB,IACGA,EAAaU,KAAKX,MAAlBC,SACR,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,aACAH,EAAAC,EAAAC,cAAA,QAAMyB,SAAUD,KAAKH,cACjBvB,EAAAC,EAAAC,cAAA,SACIC,UAAU,cACVyB,KAAK,OACLC,WAAW,QACXP,MAAON,EACPc,SAAUJ,KAAKT,cACfc,YAAY,4BAEhB/B,EAAAC,EAAAC,cAAA,UAAQ0B,KAAK,SAASzB,UAAU,cAAhC,gBA3BC6B,IAAMC,YCwDZC,oNArDXnB,MAAQ,CACJN,MAAO,CACH,CACIJ,MAAO,2BACPN,MAAM,GAEV,CACIM,MAAO,cACPN,MAAM,GAEV,CACIM,MAAO,4BACPN,MAAM,GAEV,CACIM,MAAO,gBACPN,MAAM,OAKlBF,iBAAmB,SAAAF,GACf,IAAMc,EAAQU,EAAKJ,MAAMN,MAAM0B,OAAO,SAAAxB,GAAC,OAAIA,EAAEN,QAAUV,EAAKU,QAC5Dc,EAAKC,SAAS,CAAEX,aAGpBgB,cAAgB,SAAAT,GACZ,IAAMP,EAAK,GAAA2B,OAAAC,OAAAC,EAAA,EAAAD,CAAOlB,EAAKJ,MAAMN,OAAlB,CAAyB,CAAEJ,MAAOW,EAAUjB,MAAM,KAC7DoB,EAAKC,SAAS,CAAEX,aAGpBb,mBAAqB,SAAAD,GACjB,IAAMc,EAAQU,EAAKJ,MAAMN,MAAMC,IAAI,SAAAC,GAAC,OAChCA,EAAEN,QAAUV,EAAKU,MAAQ,CAAEA,MAAOM,EAAEN,MAAON,MAAOY,EAAEZ,MAASY,IAEjEQ,EAAKC,SAAS,CAAEX,mFAGX,IACGA,EAAUiB,KAAKX,MAAfN,MACR,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqC,EAAD,CAAQd,cAAeC,KAAKD,gBAC5BzB,EAAAC,EAAAC,cAACsC,EAAD,CACI/B,MAAOA,EACPb,mBAAoB8B,KAAK9B,mBACzBC,iBAAkB6B,KAAK7B,2BA/CzBmC,IAAMC,YCDxBQ,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a9727d77.chunk.js","sourcesContent":["import React from 'react';\nimport './Task.css';\n\nconst Task = props => {\n    const { task, handleToggleStatus, handleTaskRemove } = props;\n    const classes = task.done ? 'checked' : '';\n    return (\n        <li className={classes} onClick={() => handleToggleStatus(task)}>\n            {task.label}\n            <span\n                className=\"close\"\n                onClick={event => {\n                    event.stopPropagation();\n                    handleTaskRemove(task);\n                }}\n            >\n                Ã—\n            </span>\n        </li>\n    );\n};\n\nexport default Task;\n","import React from 'react';\nimport Task from './Task';\nimport './TaskList.css';\n\nconst TaskList = props => {\n    const { handleToggleStatus, handleTaskRemove } = props;\n    const tasks = props.tasks.map(t => (\n        <Task\n            key={t.label}\n            task={t}\n            handleToggleStatus={handleToggleStatus}\n            handleTaskRemove={handleTaskRemove}\n        />\n    ));\n    return <ul className=\"task-list\">{tasks}</ul>;\n};\n\nexport default TaskList;\n","import React from 'react';\nimport './Header.css';\n\nclass Header extends React.Component {\n    state = { nextTask: '' };\n\n    onInputChange = e => {\n        this.setState({ nextTask: e.target.value });\n    };\n\n    onFormSubmit = e => {\n        e.preventDefault();\n        this.props.handleTaskAdd(this.state.nextTask);\n        this.setState({ nextTask: '' });\n    };\n\n    render() {\n        const { nextTask } = this.state;\n        return (\n            <div className=\"header\">\n                <h2 className=\"app-title\">Task List</h2>\n                <form onSubmit={this.onFormSubmit}>\n                    <input\n                        className=\"entry-field\"\n                        type=\"text\"\n                        spellCheck=\"false\"\n                        value={nextTask}\n                        onChange={this.onInputChange}\n                        placeholder=\"Enter your next task...\"\n                    />\n                    <button type=\"submit\" className=\"add-button\">\n                        Add\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport TaskList from './components/TaskList';\nimport Header from './components/Header';\nimport './App.css';\n\nclass App extends React.Component {\n    state = {\n        tasks: [\n            {\n                label: 'Star Wars: The Last Jedi',\n                done: true,\n            },\n            {\n                label: 'Toy Story 4',\n                done: false,\n            },\n            {\n                label: 'Spider-Man: Far From Home',\n                done: false,\n            },\n            {\n                label: 'The Lion King',\n                done: false,\n            },\n        ],\n    };\n\n    handleTaskRemove = task => {\n        const tasks = this.state.tasks.filter(t => t.label !== task.label);\n        this.setState({ tasks });\n    };\n\n    handleTaskAdd = nextTask => {\n        const tasks = [...this.state.tasks, { label: nextTask, done: false }];\n        this.setState({ tasks });\n    };\n\n    handleToggleStatus = task => {\n        const tasks = this.state.tasks.map(t =>\n            t.label === task.label ? { label: t.label, done: !t.done } : t\n        );\n        this.setState({ tasks });\n    };\n\n    render() {\n        const { tasks } = this.state;\n        return (\n            <div>\n                <Header handleTaskAdd={this.handleTaskAdd} />\n                <TaskList\n                    tasks={tasks}\n                    handleToggleStatus={this.handleToggleStatus}\n                    handleTaskRemove={this.handleTaskRemove}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}